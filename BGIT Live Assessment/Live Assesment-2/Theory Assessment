● What is Bootstrap, and how does it facilitate frontend development? Explain its key 
features and advantages.

Bootstrap is a popular open-source front-end framework used for web development. 
It's primarily designed to properly organise the process of creating responsive and mobile-first websites and web applications.

Key features
Responsive Grid system 
Pre-styled Components
CSS and JavaScript Library
Customization and Themes
Browser Compatibility

Advantages
Faster development
Responsiveness and consistency assured
Mobile First Approach

● Describe the grid system in Bootstrap. How can you create responsive layouts using 
the grid system?

The grid system is layout tool that enables developers to create responsive designs by using a series of containers, rows, and columns.
One can create responsive layouts that adapt and rearrange content based on different screen sizes, 
offering a seamless user experience across various devices by making use of 'containers', 'rows' and 'columns'.

● What are Bootstrap components? Provide examples of at least three commonly used
Bootstrap components.

Bootstrap components are pre-designed elements or widgets that developers can easily integrate into their web projects. 
Thesy are styled and ready to use, saving time and effort in designing and coding from scratch.

Commonly used Bootstrap components are:
Navbar
Cards
Modal
Buttons
Forms
Acordion

● Explain the purpose and usage of the following JavaScript concepts: variables, 
functions, and loops.

Variables- They are used to store values. They can be referenced and manipulated throughout a program.
Usage- they are used to declare using the 'var', 'let', or 'const' keyword. 
    values can be assigned to variables using the assignment operator '=' e.g let name ='John'

Functions-They are reusable blocks of code that perform a specific task or calculation. 
They allow onr to use a piece of code and execute it multiple times.
Usage- they can return values using the return statement. e.g 
function add(a, b) {
  return a + b;
}
let sum = add(3, 5); // sum = 8

        they  are defined using the function keyword followed by a name and a set of parentheses containing optional parameters

Loops- they are used to execute a block of code repeatedly as long as a specified condition is true. 
They help in automating repetitive tasks.

Usage- they execute a block of code as long as a specified condition is true. e.g
        let i = 0;
while (i < 5) {
  console.log(i); // Output: 0, 1, 2, 3, 4
  i++;
}

● What is the difference between let, const, and var in JavaScript? When would you 
use each of them?
'let'- Variables declared with let are block-scoped, meaning they are confined to the block ({}) in which they are defined.
'const'-Variables declared with const must be initialized with a value and cannot be reassigned. Also declared with block brackets
'var'- are function-scoped or globally scoped. They are visible throughout the function in which they are declared.

'const' is used when the value won't change, 
'let' when it might change, 
'var' should be considered only when specifically needed due to its function.

● Discuss the importance of event handling in JavaScript. Provide an example of an 
event listener and how it responds to user actions.

Event handling allows developers to respond to user actions such as clicks, mouse movements, keyboard inputs, and more. 

Importance
Helps developers to capture and respond to user interactions
It allows for real-time updates and changes to the content or behavior of a webpage based on user actions.

● How can you create and manipulate the DOM (Document Object Model) using 
JavaScript?
example

<div id="container">
  <h1>Hello</h1>
  <ul>
    <li>Item 1</li>
    <li>Item 2</li>
  </ul>
</div>

JAVASCRIPT TO MANIPULATE THE DOM
// Access the container element
let container = document.getElementById('container');

// Create a new paragraph element
let newParagraph = document.createElement('p');
newParagraph.textContent = 'This is a new paragraph.';

// Append the new paragraph to the container
container.appendChild(newParagraph);

// Update the text content of the h1 element
let heading = container.querySelector('h1');
heading.textContent = 'Greetings';

// Remove the second list item
let list = container.querySelector('ul');
let secondItem = list.querySelector('li:nth-child(2)');
list.removeChild(secondItem);


● What is AJAX, and how does it facilitate asynchronous communication with the 
server in web development?

AJAX stands for Asynchronous JavaScript and XML.
It's a technique used in web development to communicate with a server asynchronously, 
allowing one to update parts of a web page without having to reload the entire page. 

With AJAX, one can send and receive data from a server without blocking the user interface.
This means that while the request is being processed, the rest of the page can continue to function

● Describe the concept of callbacks in JavaScript and their role in handling 
asynchronous operations.
Callbacks in JS refer to functions passed as arguments to other functions to be executed later, often after an asynchronous operation completes. 
They are a fundamental concept in handling asynchronous code execution.

In JavaScript, they are used to fetch data from a server or reading a file, are asynchronous. 
Callbacks are commonly used to handle the result of these operations.

● Discuss the significance of responsive web design and why it's crucial in modern web
development

It is significant to enhance user experience
It helps for better search ranking SEO-wise
It helps maintain efficiency
It helps for adaptability to new devices
It is an industry norm as it is now industry standard
It puts the organization and developer on a competitive Edge
